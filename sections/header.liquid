{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'country-flags.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'navigation-hub.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}
{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
  <noscript>{{ 'component-mega-menu.css' | asset_url | stylesheet_tag }}</noscript>
{%- endif -%}

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-search.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}</noscript>

<style>
  header-drawer {
    justify-self: start;
  }

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    align-items: center;
  }
  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: normal;
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: normal;
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
</style>

{%- style -%}
  .header {
    padding: 1.5rem;
  }
  .section-header {
    position: sticky;
  }
  @media screen and (min-width: 750px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
      padding-left: 3rem;
      padding-right: 3rem;
    }
  }
  @media screen and (max-width: 749px) {
    .header__heading-logo {
      width: 100%;
      max-width: {{ section.settings.logo_width_mobile }}px;
    }
    .header--mobile-left .header__icons {
      gap: 0;
    }
  }
{%- endstyle -%}

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>

  <symbol id="icon-reset" class="icon icon-close"  fill="none" viewBox="0 0 18 18" stroke="currentColor">
    <circle r="8.5" cy="9" cx="9" stroke-opacity="0.2"/>
    <path d="M6.82972 6.82915L1.17193 1.17097" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
    <path d="M1.22896 6.88502L6.77288 1.11523" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
  </symbol>

  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>
{% liquid
  assign tag = 'div'
  if section.settings.sticky_header == true
    assign tag = 'sticky-header data-sticky-type="always"'
  endif
%}

<{{ tag }} class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
  {%- liquid
    assign localization_forms = false

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  <header class="header header--{{ section.settings.menu_position }}{% if section.settings.navigation_hub == true %} navigation-hub{% endif %}{% if section.settings.inline_search == true and section.settings.menu_position == 'top-left' %} with-inline-search{% endif %} header--mobile-left{% unless section.settings.expanded_width %} page-width{% endunless %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}" style="--header-top-space: {{ section.settings.padding_top }}px;">
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif
    -%}

    {% if section.settings.navigation_hub == true %}
      <button class="navigation-hub-btn btn-modal-trigger button--primary small-hide medium-hide" data-modal-type="open" data-modal-id="modal-navigation-hub" aria-label="navigation-hub-popup-open">{% render 'theme-icons', icon: 'icon-menu' %}</button>
    {% endif %}
    
    {%- if request.page_type == 'index' -%}
      <h1 class="header__heading">
    {%- endif -%}
        <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
          {%- if section.settings.logo != blank -%}
            <div class="header__heading-logo-wrapper">
              {%- assign logo_alt = section.settings.logo.alt | default: shop.name | escape -%}
              {%- assign logo_height = section.settings.logo_width | divided_by: section.settings.logo.aspect_ratio -%}
              
              {% capture widths %}{{ section.settings.logo_width }}, {{ section.settings.logo_width | times: 1.5 | round }}, {{ section.settings.logo_width | times: 2 }}{% endcapture %}
              {{ section.settings.logo | image_url: width: 600 | image_tag:
                class: 'header__heading-logo motion-reduce',
                widths: widths,
                height: logo_height,
                width: section.settings.logo_width,
                alt: logo_alt,
                preload: true
              }}
            </div>
          {%- else -%}
            <span class="h2">{{ shop.name }}</span>
          {%- endif -%}
        </a>
    {%- if request.page_type == 'index' -%}
      </h1>
    {%- endif -%}

    {% if section.settings.inline_search == true and section.settings.menu_position == 'top-left' %}
      <div class="inline-search-form medium-hide small-hide">
        {% render 'inline-search', input_id: 'inline-search' %}
      </div>
    {% endif %}

    {% if section.settings.menu_position == 'middle-left' %}
      {%- liquid
        if section.settings.menu != blank
          if section.settings.menu_type_desktop == 'dropdown' or section.settings.menu_position == 'middle-left' 
            render 'header-dropdown-menu', menu_as_button: section.settings.menu_as_button
          elsif section.settings.menu_type_desktop == 'mega'
            render 'header-mega-menu', menu_as_button: section.settings.menu_as_button, collection_image: section.settings.collection_featured_image
          endif
        endif
      %}
    {% endif %}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      {% if section.settings.inline_search == true and section.settings.menu_position == 'middle-left' %}
        <div class="inline-search-form medium-hide small-hide">
          {% render 'inline-search', input_id: 'inline-search' %}
        </div>
      {% endif %}
      {% if localization_forms %}
        <div class="desktop-localization-wrapper">
          {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
            <localization-form class="small-hide medium-hide no-js-hidden">
              {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
                <div>
                  <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                  {%- render 'country-localization', localPosition: 'HeaderCountry', countryName: section.settings.enable_country_name, countryFlags: section.settings.enable_country_flags -%}
                </div>
              {%- endform -%}
            </localization-form>
          {% endif %}
          {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
            <localization-form class="small-hide medium-hide no-js-hidden">
              {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
                <div>
                  <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                  {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
                </div>
              {%- endform -%}
            </localization-form>
          {%- endif -%}
        </div>
      {% endif %}
      {% render 'header-search', input_id: 'Search-In-Modal', inline_search: section.settings.inline_search %}

      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}">
          {% render 'theme-icons', icon: 'account' %}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {%- render 'theme-icons', icon: 'cart' -%}
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        <div class="cart-count-bubble">
          <span class="small-hide">{{ cart.total_price | money }}</span>
          <span aria-hidden="true">({{ cart.item_count }})</span>
          <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
        </div>
      </a>
    </div>
    {% if section.settings.menu_position == 'top-left' %}
      {%- liquid
        if section.settings.menu != blank
          if section.settings.menu_type_desktop == 'dropdown' or section.settings.menu_position == 'middle-left' 
            render 'header-dropdown-menu', menu_as_button: section.settings.menu_as_button
          elsif section.settings.menu_type_desktop == 'mega'
            render 'header-mega-menu', menu_as_button: section.settings.menu_as_button, collection_image: section.settings.collection_featured_image
          endif
        endif
      %}
    {% endif %}
  </header>
</{{ tag }}>

{% if section.settings.menu != blank %}
  <script src="{{ 'menu-slider.js' | asset_url }}" defer="defer"></script>
{% endif %}
{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }
    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always';
      this.headerBounds = {};
      this.setHeaderHeight();
      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));
      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };
      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');
      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;
      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);
      this.createObserver();
    }
    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }
    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }
    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });
      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);
          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);
          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }
      this.currentScrollTop = scrollTop;
    }
    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }
    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }
    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }
    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }
    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }
  customElements.define('sticky-header', StickyHeader);
  const stickyHeader = document.querySelector('sticky-header');
  if(!stickyHeader || stickyHeader == null){ 
    document.documentElement.style.setProperty('--header-height', `0px`);
  }
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if section.settings.logo %}
      "logo": {{ section.settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "checkbox",
      "id": "expanded_width",
      "label": "t:sections.all.layout.expanded_width.label"
    },
    {
      "type": "checkbox",
      "id": "sticky_header",
      "label": "t:sections.header.settings.sticky.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.all.layout.divider.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "navigation_hub",
      "label": "t:sections.header.settings.navigation_hub.label",
      "info": "t:sections.header.settings.navigation_hub.info",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.logo.content"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "t:sections.header.settings.logo.image.label"
    },
    {
      "type": "range",
      "id": "logo_width",
      "min": 150,
      "max": 300,
      "step": 10,
      "default": 150,
      "unit": "px",
      "label": "t:sections.header.settings.logo.width.desktop.label"
    },
    {
      "type": "range",
      "id": "logo_width_mobile",
      "min": 50,
      "max": 150,
      "step": 10,
      "default": 100,
      "unit": "px",
      "label": "t:sections.header.settings.logo.width.mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.navigation.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_position",
      "options": [
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.menu.position.option1.label"
        },
        {
          "value": "top-left",
          "label": "t:sections.header.settings.menu.position.option2.label"
        }
      ],
      "default": "top-left",
      "label": "t:sections.header.settings.menu.position.label",
      "info": "t:sections.header.settings.menu.position.info"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu.type.option1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu.type.option2.label"
        }
      ],
      "default": "mega",
      "label": "t:sections.header.settings.menu.type.label"
    },
    {
      "type": "checkbox",
      "id": "collection_featured_image",
      "label": "t:sections.header.settings.menu.featured_image.label",
      "info": "t:sections.header.settings.menu.featured_image.info",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "menu_as_button",
      "label": "t:sections.header.settings.menu.button.label",
      "default": true
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu.color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.search.content"
    },
    {
      "type": "checkbox",
      "id": "inline_search",
      "label": "t:sections.header.settings.search.inline.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.localization.content",
      "info": "t:sections.header.settings.localization.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.localization.language.label"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.localization.country.label"
    },
    {
      "type": "checkbox",
      "id": "enable_country_flags",
      "default": true,
      "label": "t:sections.header.settings.localization.country.flags.label"
    },
    {
      "type": "checkbox",
      "id": "enable_country_name",
      "default": false,
      "label": "t:sections.header.settings.localization.country.name.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.section_spacing.content",
      "info": "t:sections.all.section_spacing.info"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.section_spacing.above",
      "default": 30
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.section_spacing.below",
      "default": 30
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
